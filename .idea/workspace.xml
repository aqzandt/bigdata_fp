<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="72a35dc5-490b-4ae7-82b7-56902fdb6347" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/src/main/scala/intro/Functions.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/intro/Functions.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/intro/Practice.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/intro/Practice.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/scala/intro/FunctionsTest.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/scala/intro/FunctionsTest.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 0
}]]></component>
  <component name="ProjectId" id="2mIn7NhdKI48uz1sAAv4qmrK1fY" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "C:/Delft/Y2/Q1/Big Data Processing/bigdata_fp",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "project.structure.last.edited": "Global Libraries",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="ScalaTest.FPFunctionsTest.FoldR">
    <configuration name="FPFunctionsTest.Flatten" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="fp-template" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="fp_functions.FPFunctionsTest" />
      <option name="testName" value="Flatten" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FPFunctionsTest.FoldR" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="fp-template" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="fp_functions.FPFunctionsTest" />
      <option name="testName" value="FoldR" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FPFunctionsTest.Map" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="fp-template" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="fp_functions.FPFunctionsTest" />
      <option name="testName" value="Map" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FPFunctionsTest.Zip" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="fp-template" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="fp_functions.FPFunctionsTest" />
      <option name="testName" value="Zip" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PatternMatching2Test.append" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="fp-template" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="intro.PatternMatching2Test" />
      <option name="testName" value="append" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.FPFunctionsTest.FoldR" />
        <item itemvalue="ScalaTest.FPFunctionsTest.Zip" />
        <item itemvalue="ScalaTest.PatternMatching2Test.append" />
        <item itemvalue="ScalaTest.FPFunctionsTest.Flatten" />
        <item itemvalue="ScalaTest.FPFunctionsTest.Map" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="72a35dc5-490b-4ae7-82b7-56902fdb6347" name="Changes" comment="" />
      <created>1726772795375</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726772795375</updated>
      <workItem from="1726772796442" duration="16632000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>